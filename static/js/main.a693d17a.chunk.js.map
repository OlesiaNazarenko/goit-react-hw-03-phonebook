{"version":3,"sources":["App.module.css","components/filter/Filter.module.css","components/contactForm/ContactForm.module.css","components/contactList/ContactList.jsx","components/filter/Filter.jsx","components/contactForm/ContactForm.jsx","App.js","index.js","components/contactList/ContactList.module.css"],"names":["module","exports","ContactList","data","deleteContact","className","s","map","id","name","number","ContactListItem","ContactListSpan","btnDelete","type","onClick","Filter","value","changeFilter","seacrhInput","placeholder","onChange","ContactForm","state","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","contactsForm","label","input","autoComplete","pattern","title","required","contactsFormBtn","Component","toast","configure","App","contacts","filter","formSubmitHandler","some","toLowerCase","warn","transition","Bounce","shortid","generate","success","Flip","idContacts","autoClose","Zoom","getVisibleContacts","normalizefilter","contact","includes","prevProps","prevState","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","mainDiv","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a693d17a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"App_mainDiv__ZVrRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"seacrhInput\":\"Filter_seacrhInput__34hFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__2uW5K\",\"label\":\"ContactForm_label__jDS03\",\"input\":\"ContactForm_input__gmocZ\",\"contactsFormBtn\":\"ContactForm_contactsFormBtn__3OlqZ\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css'\r\n\r\nfunction ContactList({ data, deleteContact}) {\r\n    return (\r\n        <ul className={s.ContactList}>\r\n            {data.map(({id, name, number}) => {\r\n                return (\r\n                    <li key={id} className={s.ContactListItem}>\r\n                        <span className={s.ContactListSpan}>{name}</span>\r\n                        <span className={s.ContactListSpan}>{number}</span>\r\n                        <button key={id}\r\n                            className={s.btnDelete}\r\n                            type=\"button\" onClick={() => deleteContact(id)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                   \r\n                )\r\n            })}\r\n         </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n}; \r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css'\r\n\r\nfunction Filter({value, changeFilter}) {\r\n    return (\r\n         <label>\r\n        Find contacts by name\r\n            <input className={s.seacrhInput} type='text' placeholder='Enter a name' value={value} onChange={changeFilter}/>\r\n    </label>\r\n    )\r\n   \r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    changeFilter: PropTypes.func.isRequired,\r\n}; \r\nexport default Filter;","import React, {Component} from 'react';\r\nimport s from 'components/contactForm/ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number:'',\r\n    }\r\n\r\n    handleChange = e => {\r\n       const { name, value } = e.currentTarget;\r\n        this.setState({\r\n        [name]: value\r\n        })\r\n    };\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();;\r\n    }\r\n    reset = () => {\r\n        this.setState({ name: \"\", number: \"\", })\r\n    }\r\n    render() {\r\n       return(\r\n       <form onSubmit={this.handleSubmit} className={s.contactsForm}>\r\n            <label  className={s.label}>Name\r\n                   <input \r\n                    className={s.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    autoComplete=\"off\"\r\n                    onChange={this.handleChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n            />\r\n            </label>\r\n            <label  className={s.label}>Number\r\n                   <input \r\n                    className={s.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={this.state.number}\r\n                    autoComplete=\"off\"\r\n                    onChange={this.handleChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n            />\r\n            </label>\r\n            <button type=\"submit\" className={s.contactsFormBtn}>Add contact</button>\r\n        </form>\r\n    )\r\n   }\r\n    \r\n}\r\n\r\nexport default ContactForm;","import React, { Component } from 'react';\r\nimport s from './App.module.css'\r\nimport { toast,Zoom, Flip, Bounce} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport shortid from 'shortid';\r\nimport ContactList from './components/contactList/ContactList';\r\nimport Filter from './components/filter/Filter';\r\nimport ContactForm from './components/contactForm/ContactForm';\r\n\r\ntoast.configure()\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n  contacts: [],\r\n  filter: ''\r\n  }\r\n\r\n  formSubmitHandler = data => {\r\n    if (this.state.contacts.some(({ name }) => name.toLowerCase() === data.name.toLowerCase())) {\r\n      toast.warn(`${data.name} is already in your phonebook`, {\r\n              transition: Bounce\r\n            });\r\n            return;\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [\r\n          ...contacts,\r\n          {\r\n            id: shortid.generate(),\r\n            ...data,\r\n          },\r\n        ],\r\n      }));\r\n      toast.success('The contact is added to the phonebook.', { transition: Flip })\r\n  \r\n        }\r\n  }\r\n\r\n  deleteContact = idContacts => {\r\n    toast('Deleted', { autoClose: 3000,transition:Zoom, })\r\n    this.setState(({contacts}) => ({\r\n      contacts: contacts.filter(({ id })=>{return id !== idContacts})\r\n    }))\r\n}\r\n\r\n  \r\n  changeFilter = (e) => {\r\n    this.setState({filter:e.currentTarget.value})\r\n  }\r\n\r\n  getVisibleContacts = () => {\r\n    const normalizefilter = this.state.filter.toLowerCase();\r\n    return(this.state.contacts.filter((contact)=>{return contact.name.toLowerCase().includes(normalizefilter)}))\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if (this.state.contacts !== prevState.contacts) {\r\n     localStorage.setItem('contacts', JSON.stringify(this.state.contacts)) \r\n   }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts)\r\n    if (parsedContacts) {\r\n      \r\n      this.setState({ contacts: parsedContacts })\r\n    }\r\n   \r\n  }\r\n  \r\n  render() {\r\n       return (\r\n        <div className={s.mainDiv}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.formSubmitHandler}/>\r\n        <h2>Contacts</h2>\r\n        <Filter value={this.state.filter} changeFilter={this.changeFilter} />\r\n        <ContactList data={this.getVisibleContacts()} deleteContact={ this.deleteContact} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactList_btnDelete___tkxS\",\"ContactListSpan\":\"ContactList_ContactListSpan__DuONL\",\"ContactList\":\"ContactList_ContactList__1Tg7L\",\"ContactListItem\":\"ContactList_ContactListItem__1Wce8\"};"],"sourceRoot":""}